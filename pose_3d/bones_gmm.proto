// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";

package research.vision.mouse_pose.optical_mouse;

// Stores the parameters of a Gaussian Mixture Model. Used in conjunction with
// a PCA model. See bones_pca.proto
message BonesGaussianMixtureModelProto {
  // The number of components in the model. This is part of the expected
  // dimensionality of the data: C.
  optional int32 number_of_components = 1;

  // This is the data dimensionality in the model. Each observation is expected
  // to have this many values: D. This value should be equal to PCA components.
  optional int32 number_of_dimensions = 2;

  // The proportion of data explained by each component.
  // Any valid model should have C values in this field.
  repeated float mixing_proportions = 3 [packed = true];

  // The means for each component.
  // Any valid model should have C * D values in this field. Reshape to (C, D)
  repeated float means = 4 [packed = true];

  // The precision matrix for each component.
  // Any valid model should have C * D * D values in this field.
  // Currently implementations have a diagonal covariance. Reshape to (C, D, D)
  repeated float covariances = 5 [packed = true];

  // Order to traverse the KinematicChain when updating bones
  repeated int32 order_to_traverse = 6 [packed = true];
}
